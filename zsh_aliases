# Misc
alias lg='lazygit'
alias xclip='xclip -selection c'
alias ls='ls --color=auto'
alias ll='ls -lah --color=auto'
alias v='env TERM=wezterm nvim'
alias nvim='env TERM=wezterm nvim'

# GIT
function git_current_branch() {
    local ref
    ref=$(git symbolic-ref --quiet HEAD 2> /dev/null)
    local ret=$?
    if [[ $ret != 0 ]]; then
        [[ $ret == 128 ]] && return
        ref=$(git rev-parse --short HEAD 2> /dev/null) || return
    fi
    echo ${ref#refs/heads/}
}

alias gpsup='git push --set-upstream origin $(git_current_branch)'
alias glg='git log --stat'
alias glo="git log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=short"
alias gl='git pull'
alias gp='git push'
alias grs='git restore'
# alias gsw='git switch'
alias gst='git status'
alias gc='git commit -v --cleanup=scissors'
alias gd='git diff'
alias ga='git add'

# Git switch
function gsw() {
    if [[ ! -z $@ ]]; then
        git switch $@
    else
        git switch $(git branch -a | grep -E "HEAD|^\*" -v | sed "s/remotes\/origin\///" | sort | uniq | fzf)
    fi
}

function gcpb() {
    git log $1 --oneline | fzf -m --preview 'echo {} | cut -d" " -f1 | xargs git show' | awk '{ print $1 }' | xargs -n 1 git cherry-pick
}

function gstash() {
    if [[ ! -z $@ ]]; then
        git stash $@
    else
        local stash=$(git stash list | fzf --preview 'echo {} | sed "s/\}.*/}/" | xargs git stash show' | sed 's/\}.*/}/')
        if [[ ! -z "$stash" ]]; then
            git stash apply $stash
        fi
    fi
}

alias rgg='rg --no-ignore-vcs -g "!{node_modules,build,dist,public,*.svg,*.vdx}"'
