snippet im "Import"
	import $1 from '$2';

snippet ima "Import as"
	import * as $1 from '$2';

snippet exd "Export default"
	export default $0

snippet ex "Export"
	export $0

snippet r "return"
	return $0

snippet th "throw"
	throw ${1:new Error("$2")};

snippet c "const"
    const ${1:name} = ${2:"$3"}

snippet l "let"
    let ${1:name} = ${2:"$3"}

snippet if "If case"
	if ($1) {
		$0
	}

snippet elif "Else-if case"
	else if ($1) {
		$0
	}

snippet el "Else case"
	else {
		$0
	}

snippet af "Arrow function" w
	($1) => ${2:{
		$0
	\}}

snippet afn "Const arrow Function" w
	const ${1:name} = ($2) => ${3:{
		$0
	\}}

snippet fn "Function" w
	function ${1:name}($2) {
		$0
	}

snippet fof "for of"
	for (const ${1:value} of ${2:iterable}) {
		$0
	}

snippet fin "for in"
	for (const ${1:value} in ${2:iterable}) {
		$0
	}

snippet lg "Log"
	console.log(${1});

snippet lgv "Log variable"
	console.log('${1}:', $1);$0

snippet desc
	describe('${1:something}', () => {
		$0
	});

snippet it
	it('${1:should do something}', () => {
		$0
	});

snippet sw "Switch"
	switch(${1:var}) {
		case ${2}:
			$3
			break;
		default:
			$4
			break;
	}

snippet ca "Switch case"
	case $1:
		$0
		break;

snippet uses "useState"
	const [$1, set${1/.*/\u\0/g}] = useState(${2:null});$0

snippet usem "useMemo"
	const ${1:name} = useMemo(() => ${2:{$3\}}, [$4]);$0

snippet usec "useCallback"
	const ${1:name} = useCallback(($2) => ${3:{$4\}}, [$5]);$0

snippet usee "useEffect"
	useEffect(() => {
		$1
	}, [$2]);$0

snippet user "useRef"
	const ${1:ref} = useRef(${2:null});$0

snippet useC "useContext"
	const ${1:name} = useContext(${2:Context});$0

